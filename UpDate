//ALGORITIMO DE ORDENAÇÃO E BUSCA
//ORDENAR DO MENOR PARA O MAIOR COM O BUBLE_SORT
//IMPORTA TODA A LIVRARIA DO JAVA UTIL USANDO O SINAL (*)

import java.util*; 																		
public static void main(String[] args){

	int x[] = new int[5];
	int n, i, aux;
//Carregar números no vetor
	Scanner entrada = new Scanner(System.in);
	
	for(i = 0; i <= 4; i++){
	System.out.println("Digite o "+(i+1) + "° número: ");
	x[i] = entrada.nextInt();
  }
//Ordenar de forma crescente laço com a quantidade de alementos do vetor
	for(n=1; n<=5; n++){
//laço que percorre da primeira á posição do vetor
	for(i =o; i<=3; i++){
//checa se x[i] e maior que x[i+1];
	if(x[i] > x[i+1])
	{
	   aux = x[i];
//Se x[i] for maior que x[i+1] aux recebe o valor de x[i];
	   x[i] = x[i+1];
//E o x[i] recebe o valor de x[i+1]
	   x[i+1] = aux;
//E no fim x[i+1] recebe o valor de aux fazendo assim a troca de posição de o menor vai para a esqurda e o maior para a direita se assim necessario for
	}
    }

 }
//Mostrando o vetor ordenado
	for(i = 0; i < = 4; i++){
	System.out.println((i+1) + "° número: " + x[i]);
   }

}
------------------------------------------------------------------Buble Sort Melhorado-------------------------------------------------------------------------------------------
//IMPORTA TODA A LIVRARIA DO JAVA UTIL COM O SINAL(*);
import java.util.*;
public class buble_sort_melhorado1
{
	public static void main(String[] args){
//instanciando um array
	int x[] = new int[5];
//Declarando as variaveis 	
	int j, i, aux;
	Scanner entrada = new Scanner(System.in);
//Carregando os números no vetor
	for(i = 0; i <= 4; i++){
	System.out.println("Digite o " +(I + 1)+"° número: ");
	x[i] = entrada.nextInt();

  }
//Ordenando de forma crescente
//Laço com a quantidade de elementos do vetor -1
	for(j = 1; j <= 4; j++){
	  if(x[i] < x[i-1]){
// Se o x[i] for menor que x[i+1] o aux recebe o valor de x[i]
	     aux = x[i];
	     x[i] = x[i-1];
//O x[i] vai receber o valor do x[i+1] 
	     x[i-1] = aux;
//O x[i-1] vai receber o valor de aux e assim x[-1] vai fazer a troca de possição passando o menor valor para a esquerda e o maior valor para a direita se assim necessario for
//fazendo assim a ordem crescente dos valores
	  }
	{
   }
//Mostrando o vetor ordenado 
	for(i = 0; i < 4; i++){
	System.out.println((i+1)+"° número: " + x[i]);
  }
 }
}
---------------------------------------------------------BUBLE SORT MELHORADO SEGUNDA VERSAO ------------------------------------------------------------------------------------

//IMPORTA TODA A LIVRARIA DA CLASSE JAVA UTIL USANDO O CURINGA CARD(*)
import java.util.*;
public class buble_sort_melhorado2
{
	public static void main(String[] args){
//INICIANDO UM ARRAY 
  	int x[] = new int[5];
//INICIANDO VARIAVEIS
	int n, i, aux, troca;
//INSTANCIANDO UM OBJ 
	Scanner entrada = new Scanner(System.in);
//CARREGANDO OS NÚMEROS NO VETOR
	for(i = 0; i <= 4; i++){
	System.out.println("Digite o " +(i + 1)+ "° número: ");	
//RECEBENDO OS VALORES PARA O ARRAY
	x[i] = entrada.nextInt();
   }
//ORDENANDO DE FORMA DECRESCENTE LAÇO COM A QUANTIDADE DE ELEMENTOS DO VETOR ENQUANTO HOUVER TROCA 
	n = 1;
	troca = 1;
	while (n <= 5 && troca == 1){
	troca = 0;
	for(i = 0; i <= 3; i++){
	if(x[i] < x[i+1]){
//SE O VALOR DE X[I] FOR MENOR QUE X[I+1] A VARIAVEL TROCA RECEBE O VALOR 1
	   troca = 1;
//E A VARIAVEL AUX RECEBE O VALOR DE X[I]
	   aux = x[i];
//E X[I] RECEBE O VALOR DE X[I+1]
	   x[i] = x[i+1];
//E NO FIM X[I+1] VAI RECEBER O VALOR DA VARIAVEL AUX MUDANDO ASSIM A POSIÇÃO DE X[I] PARA A ESQUERDA
	   x[i + 1] = aux;
	}
      }
	    n = n + 1;
    }
//MOSTRANDO O VETOR ORDENADO 
	for(i = 0; i <=4; i++){
	System.out.println((i + 1)+ "° número: "+ x[i] );
    }
  }
}
